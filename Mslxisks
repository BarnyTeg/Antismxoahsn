local radius = 15
local includeChildren = true

local function getPlayerPosition()
    local player = game:GetService("Players").LocalPlayer
    return player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") 
        and player.Character.HumanoidRootPart.Position or Vector3.new(0, 0, 0)
end

local function safeToString(value)
    local success, result = pcall(function()
        if typeof(value) == "Instance" then
            return value:GetFullName()
        elseif typeof(value) == "Vector3" then
            return string.format("(%.2f, %.2f, %.2f)", value.X, value.Y, value.Z)
        elseif typeof(value) == "Color3" then
            return string.format("(%.2f, %.2f, %.2f)", value.R, value.G, value.B)
        else
            return tostring(value)
        end
    end)
    return success and result or "N/A"
end

local function getExtendedInfo(obj)
    local info = {}
    
    -- –ë–∞–∑–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    table.insert(info, "üîπ Class: "..safeToString(obj.ClassName))
    table.insert(info, "üîπ Name: "..safeToString(obj.Name))
    table.insert(info, "üîπ FullPath: "..safeToString(obj:GetFullName()))
    table.insert(info, "üîπ RobloxID: "..safeToString(obj:GetDebugId()))
    
    -- –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
    if obj:IsA("BasePart") then
        table.insert(info, "üìè Position: "..safeToString(obj.Position))
        table.insert(info, "üìê Size: "..safeToString(obj.Size))
        table.insert(info, "üß± Material: "..safeToString(obj.Material))
        table.insert(info, "üîò Anchored: "..safeToString(obj.Anchored))
        table.insert(info, "üí• CanCollide: "..safeToString(obj.CanCollide))
        table.insert(info, "üëÅÔ∏è Transparency: "..safeToString(obj.Transparency))
    end
    
    -- –î–ª—è –º–æ–¥–µ–ª–µ–π
    if obj:IsA("Model") then
        table.insert(info, "üß© PrimaryPart: "..safeToString(obj.PrimaryPart))
        table.insert(info, "üßí Children: "..safeToString(#obj:GetChildren()))
    end
    
    -- –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –∏–≥—Ä–æ–∫–∞
    local rootPart = obj:IsA("BasePart") and obj or (obj:IsA("Model") and obj.PrimaryPart) or obj:FindFirstChildOfClass("BasePart")
    if rootPart then
        local dist = (rootPart.Position - getPlayerPosition()).Magnitude
        table.insert(info, "üìè Distance: "..string.format("%.1f", dist).."m")
    end
    
    return table.concat(info, "\n")
end

local function scanArea()
    local result = {"=== SCAN RESULTS ==="}
    local count = 0
    
    for _, obj in pairs(workspace:GetDescendants()) do
        local rootPart = obj:IsA("BasePart") and obj or (obj:IsA("Model") and obj.PrimaryPart) or obj:FindFirstChildOfClass("BasePart")
        if rootPart and (rootPart.Position - getPlayerPosition()).Magnitude <= radius then
            local success, info = pcall(getExtendedInfo, obj)
            table.insert(result, "\n"..(success and info or "üö´ Failed to get info for: "..safeToString(obj.Name)))
            count = count + 1
        end
    end
    
    table.insert(result, string.format("\n=== Found %d objects in %dm radius ===", count, radius))
    
    local output = table.concat(result, "\n")
    setclipboard(output)
    print(output)
    print("\n[SUCCESS] Data copied to clipboard!")
end

-- –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
scanArea()
