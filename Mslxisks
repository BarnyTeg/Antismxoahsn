-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local scanRadius = 10 -- —Ä–∞–¥–∏—É—Å –≤ –º–µ—Ç—Ä–∞—Ö
local updateDelay = 1 -- –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

-- –°–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local clipboard = setclipboard or toclipboard or function(text) print("üìã –ë—É—Ñ–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ—Ç –¥–∞–Ω–Ω—ã–µ:\n" .. text) end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
local function getNearbyObjects(position)
    local result = "üîç –û–±—ä–µ–∫—Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ " .. scanRadius .. " –º–µ—Ç—Ä–æ–≤:\n\n"
    local objects = {}
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            local distance = (obj.Position - position).Magnitude
            if distance <= scanRadius then
                table.insert(objects, {
                    Name = obj.Name,
                    Class = obj.ClassName,
                    Distance = distance,
                    Id = obj:GetDebugId()
                })
            end
        end
    end

    -- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é
    table.sort(objects, function(a, b) return a.Distance < b.Distance end)

    -- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞
    for _, item in ipairs(objects) do
        result ..= string.format(
            "üìå %s (%s)\nID: %s | –î–∏—Å—Ç–∞–Ω—Ü–∏—è: %.1f –º\n\n",
            item.Name, item.Class, item.Id, item.Distance
        )
    end

    return result
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true do
    if player.Character then
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:WaitForChild("HumanoidRootPart")
        if rootPart then
            local report = getNearbyObjects(rootPart.Position)
            print(report) -- –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
            clipboard(report) -- –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä
        end
    end
    task.wait(updateDelay)
end
