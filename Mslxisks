local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local logData = ""

-- Функция добавления логов
local function addLog(text)
    logData = logData .. text .. "\n"
    print(text) -- Вывод в консоль
end

-- Логируем API и свойства всех NPC
local function logNPCData()
    for _, npc in pairs(workspace:GetChildren()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") then
            local humanoid = npc.Humanoid
            local maxHp = humanoid.MaxHealth
            local rootPart = npc:FindFirstChild("HumanoidRootPart")

            addLog("=== NPC Данные ===")
            addLog("Имя: " .. npc.Name)
            addLog("Класс: " .. npc.ClassName)
            addLog("HP: " .. humanoid.Health .. "/" .. maxHp)
            addLog("RootPart: " .. tostring(rootPart))
            
            -- Выводим все свойства NPC
            for _, obj in pairs(npc:GetChildren()) do
                addLog("Объект: " .. obj.Name .. " | Класс: " .. obj.ClassName)
            end

            -- Логируем изменения HP
            humanoid.HealthChanged:Connect(function(newHp)
                addLog(npc.Name .. " получил урон! Новый HP: " .. newHp)
            end)
        end
    end
end

-- Логируем API и переменные игрока
local function logPlayerData()
    local character = player.Character
    if not character then return end

    addLog("=== Игрок ===")
    addLog("Имя: " .. player.Name)
    addLog("Класс: " .. player.ClassName)
    
    -- Перебираем все объекты в персонаже
    for _, obj in pairs(character:GetChildren()) do
        addLog("Объект: " .. obj.Name .. " | Класс: " .. obj.ClassName)
    end
end

-- Логируем все переменные в игре
local function logGlobalVariables()
    addLog("=== Глобальные переменные ===")
    for k, v in pairs(getfenv()) do
        addLog(tostring(k) .. " = " .. tostring(v))
    end
end

-- Запускаем логирование каждые 5 секунд
runService.Heartbeat:Connect(function()
    logNPCData()
    logPlayerData()
    logGlobalVariables()
end)
