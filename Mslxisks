local Players = game:GetService("Players")
local player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

-- Настройки
local LOG_LIMIT = 1000 -- Максимум записей в логе
local ActionLog = {}
local LastActionTime = 0

-- Форматирование данных
local function formatValue(value)
    if typeof(value) == "table" then
        return HttpService:JSONEncode(value)
    elseif typeof(value) == "Vector3" then
        return string.format("(%.1f, %.1f, %.1f)", value.X, value.Y, value.Z)
    else
        return tostring(value)
    end
end

-- Логирование действия
local function logAction(type, details)
    local timestamp = os.date("%H:%M:%S")
    local entry = string.format("[%s] %s: %s", timestamp, type, details)
    
    table.insert(ActionLog, 1, entry) -- Добавляем в начало
    
    if #ActionLog > LOG_LIMIT then
        table.remove(ActionLog)
    end
    
    print(entry)
    LastActionTime = os.time()
end

-- 1. Мониторинг кликов и касаний
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    local info = {
        Type = input.UserInputType.Name,
        KeyCode = input.KeyCode.Name,
        Position = input.Position or Vector3.new()
    }
    
    logAction("INPUT", string.format("%s | Key: %s | Pos: %s", 
        info.Type, info.KeyCode, formatValue(info.Position)))
end)

-- 2. Мониторинг изменений в инвентаре
if player:FindFirstChild("Backpack") then
    player.Backpack.ChildAdded:Connect(function(item)
        logAction("INVENTORY+", string.format("%s (%s)", item.Name, item.ClassName))
    end)
    
    player.Backpack.ChildRemoved:Connect(function(item)
        logAction("INVENTORY-", string.format("%s (%s)", item.Name, item.ClassName))
    end)
end

-- 3. Мониторинг сетевых событий
for _, obj in ipairs(game:GetDescendants()) do
    if obj:IsA("RemoteEvent") then
        obj.OnClientEvent:Connect(function(...)
            logAction("NETWORK", string.format("%s (%s) | Args: %s", 
                obj.Name, obj.ClassName, formatValue({...})))
        end)
    elseif obj:IsA("RemoteFunction") then
        local oldInvoke = obj.InvokeServer
        obj.InvokeServer = function(self, ...)
            logAction("REMOTE CALL", string.format("%s (%s) | Args: %s", 
                obj.Name, obj.ClassName, formatValue({...})))
            return oldInvoke(self, ...)
        end
    end
end

-- 4. Мониторинг изменений персонажа
player.CharacterAdded:Connect(function(character)
    logAction("CHARACTER", "Персонаж загружен")
    
    local humanoid = character:WaitForChild("Humanoid")
    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        logAction("HEALTH", string.format("HP: %.1f", humanoid.Health))
    end)
end)

-- 5. Мониторинг физических взаимодействий
workspace.DescendantAdded:Connect(function(obj)
    if obj:IsA("BasePart") then
        obj.Touched:Connect(function(otherPart)
            logAction("COLLISION", string.format("%s ↔ %s", obj.Name, otherPart.Name))
        end)
    end
end)

-- 6. Мониторинг GUI-взаимодействий
local function monitorGui(gui)
    gui.DescendantAdded:Connect(function(element)
        if element:IsA("TextButton") or element:IsA("ImageButton") then
            element.MouseButton1Click:Connect(function()
                logAction("GUI CLICK", element:GetFullName())
            end)
        end
    end)
end

for _, gui in ipairs(player:WaitForChild("PlayerGui"):GetDescendants()) do
    if gui:IsA("ScreenGui") then
        monitorGui(gui)
    end
end

logAction("SYSTEM", "Мониторинг активирован. Все действия записываются.")
