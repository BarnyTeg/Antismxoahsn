local player = game:GetService("Players").LocalPlayer
local replicated = game:GetService("ReplicatedStorage")

-- Поиск RemoteEvent для домов
local setHouse = replicated:FindFirstChild("SetHouse", true) or
                replicated:FindFirstChild("ClaimHouse", true) or
                replicated:FindFirstChild("HouseSystem", true)

-- Вывод текущих домов
local function printHouses()
    print("Текущие дома:")
    for _, house in pairs(workspace:GetChildren()) do
        if house:FindFirstChild("Owner") and house.Owner.Value == player.Name then
            print("Дом: " .. house.Name .. " (Владелец: " .. house.Owner.Value .. ")")
        end
    end
end

-- Лёгкая заморозка сервера
local function freezeServer()
    local remotes = {
        replicated:FindFirstChild("InteractWithObject", true),
        replicated:FindFirstChild("DropItem", true),
        replicated:FindFirstChild("StoreItem", true)
    }
    spawn(function()
        print("Лёгкая заморозка сервера — держись!")
        for i = 1, 300 do
            for _, remote in pairs(remotes) do
                if remote then
                    remote:FireServer(math.random(1, 1000), {}, nil, "spam")
                end
            end
            wait(0.001)
        end
        print("Заморозка закончена!")
    end)
end

-- Функция для спавна дома
local function spawnHouse(houseType)
    if setHouse then
        -- Спамим запрос на установку дома
        setHouse:FireServer(houseType, player, true)
        setHouse:FireServer({HouseType = houseType, Player = player, Claim = true})
        print("Пытаюсь спавнить дом: " .. houseType)
    else
        print("RemoteEvent для домов не найден!")
    end
end

-- Основной чит
printHouses()
if setHouse then
    print("Начинаю спавн нескольких домов!")
    freezeServer() -- Лёгкая заморозка
    
    -- Список типов домов (примеры, могут отличаться)
    local houseTypes = {
        "ModernHouse",
        "LuxuryApartment",
        "DarkScaryHouse",
        "SmallHouse",
        "FamilyHome"
    }
    
    -- Спавним 5 разных домов
    for i, houseType in pairs(houseTypes) do
        spawnHouse(houseType)
        wait(0.1)
    end
    print("Заспавнил дома, чекни карту!")
else
    print("Не могу найти RemoteEvent для спавна домов!")
end

-- Проверка после
wait(1)
printHouses()
