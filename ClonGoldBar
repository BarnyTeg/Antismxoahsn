local target = workspace:FindFirstChild("Part") -- –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –æ–±—ä–µ–∫—Ç
if not target then return end

-- 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–≤
local attributes = {}
for _, attr in pairs(target:GetAttributes()) do
    table.insert(attributes, {Name = attr, Value = target:GetAttribute(attr)})
end

-- 2. –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö Value –æ–±—ä–µ–∫—Ç–æ–≤
local values = {}
for _, child in ipairs(target:GetChildren()) do
    if child:IsA("ValueBase") then
        table.insert(values, {
            Type = child.ClassName,
            Name = child.Name,
            Value = child.Value
        })
    end
end

-- 3. –ü–æ–∏—Å–∫ –≤ ReplicatedStorage –¥–ª—è —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
local templates = {}
local repStorage = game:GetService("ReplicatedStorage")
for _, item in ipairs(repStorage:GetDescendants()) do
    if item.Name == target.Name and item:IsA("BasePart") then
        table.insert(templates, item:GetFullName())
    end
end

-- 4. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
local report = string.format(
    "üîç –ê–Ω–∞–ª–∏–∑ –æ–±—ä–µ–∫—Ç–∞ [%s] (%s)\n\n"..
    "üìå –ê—Ç—Ä–∏–±—É—Ç—ã (%d):\n%s\n\n"..
    "üî¢ –ó–Ω–∞—á–µ–Ω–∏—è (%d):\n%s\n\n"..
    "üì¶ –®–∞–±–ª–æ–Ω—ã (%d):\n%s",
    target.Name,
    target:GetDebugId(),
    #attributes,
    table.concat(
        table.tabulate(attributes, function(i,v)
            return string.format("- %s = %s", v.Name, tostring(v.Value))
        end), "\n"
    ),
    #values,
    table.concat(
        table.tabulate(values, function(i,v)
            return string.format("- %s (%s) = %s", v.Name, v.Type, tostring(v.Value))
        end), "\n"
    ),
    #templates,
    table.concat(templates, "\n")
)

print(report)
setclipboard(report)
