local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer

local function deepCopy(original)
    local newObj = Instance.new(original.ClassName)
    
    -- Копируем публичные свойства
    for prop, _ in pairs(getproperties(original)) do
        if not string.find(prop, "__") then -- Игнорируем скрытые
            pcall(function()
                newObj[prop] = original[prop]
            end)
        end
    end
    
    -- Рекурсивное копирование детей
    for _, child in ipairs(original:GetChildren()) do
        deepCopy(child).Parent = newObj
    end
    
    return newObj
end

local function createCustomBandage()
    local original = ReplicatedStorage:FindFirstChild("Bandage")
    if not original then return end
    
    local customBandage = deepCopy(original)
    customBandage.Name = "Bandage_CUSTOM_"..HttpService:GenerateGUID(false)
    
    -- Изменяем критичные идентификаторы
    if customBandage:FindFirstChild("Configuration") then
        local config = customBandage.Configuration
        if config:FindFirstChild("ItemId") then
            config.ItemId.Value = "CUSTOM_"..tostring(os.time())
        end
    end
    
    return customBandage
end

-- Использование
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.F then
        local bandage = createCustomBandage()
        if bandage then
            bandage.Parent = player.Backpack
            print("Кастомный бандаж создан! ID: "..bandage:GetDebugId())
        end
    end
end)
