-- Helicopter Script for Delta Executor (Mobile)
-- Version: 1.4 | Date: 16.04.2025
-- Description: Automatically spawns a detailed helicopter with mobile buttons and speed display

-- Проверка окружения Roblox
if not game then
    error("This script must run in a Roblox environment")
end

-- Сервисы
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")
local InsertService = game:GetService("InsertService")
local LocalPlayer = Players.LocalPlayer

-- Уведомления
local function notify(title, text, duration)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 5
        })
    end)
end

-- Ждём, пока персонаж игрока загрузится
while not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") do
    wait(0.1)
end

-- Позиция для спавна
local spawnPos = LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(10, 5, 0)

-- Загружаем модель вертолёта из Roblox Library
local helicopterModel
local success, errorMsg = pcall(function()
    helicopterModel = InsertService:LoadAsset(184644819) -- Helicopter (Detailed)
end)

if not success or not helicopterModel then
    notify("Error", "Failed to load helicopter model: " .. tostring(errorMsg))
    return
end

-- Настраиваем модель
helicopterModel.Parent = Workspace
helicopterModel.Name = "Helicopter"

-- Ищем сиденье в модели (модель может содержать VehicleSeat или Seat)
local seat
for _, child in pairs(helicopterModel:GetDescendants()) do
    if child:IsA("VehicleSeat") or child:IsA("Seat") then
        seat = child
        break
    end
end

-- Если сиденье не найдено, создаём своё
if not seat then
    seat = Instance.new("VehicleSeat")
    seat.Size = Vector3.new(2, 1, 2)
    seat.Position = spawnPos + Vector3.new(0, 2, 0)
    seat.BrickColor = BrickColor.new("Black")
    seat.Parent = helicopterModel
end

-- Ищем корневую часть (PrimaryPart)
if not helicopterModel.PrimaryPart then
    local rootPart = Instance.new("Part")
    rootPart.Name = "HumanoidRootPart"
    rootPart.Size = Vector3.new(2, 2, 2)
    rootPart.Position = spawnPos
    rootPart.Transparency = 1
    rootPart.CanCollide = false
    rootPart.Parent = helicopterModel
    helicopterModel.PrimaryPart = rootPart
end

-- Перемещаем модель в нужную позицию
helicopterModel:MoveTo(spawnPos)

-- Делаем модель неподвижной изначально
for _, part in pairs(helicopterModel:GetDescendants()) do
    if part:IsA("BasePart") then
        part.Anchored = true
        part.CanCollide = true
    end
end

-- GUI для управления
local controlGui = Instance.new("ScreenGui")
controlGui.Name = "HelicopterControls"
controlGui.Enabled = false
controlGui.Parent = LocalPlayer.PlayerGui

-- Кнопка Up
local upButton = Instance.new("TextButton")
upButton.Size = UDim2.new(0, 60, 0, 60)
upButton.Position = UDim2.new(0, 10, 0.5, -70)
upButton.Text = "Up"
upButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
upButton.TextColor3 = Color3.fromRGB(255, 255, 255)
upButton.TextScaled = true
upButton.Parent = controlGui

-- Кнопка Down
local downButton = Instance.new("TextButton")
downButton.Size = UDim2.new(0, 60, 0, 60)
downButton.Position = UDim2.new(0, 10, 0.5, 0)
downButton.Text = "Down"
downButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
downButton.TextColor3 = Color3.fromRGB(255, 255, 255)
downButton.TextScaled = true
downButton.Parent = controlGui

-- Кнопка Forward
local forwardButton = Instance.new("TextButton")
forwardButton.Size = UDim2.new(0, 60, 0, 60)
forwardButton.Position = UDim2.new(1, -130, 0.5, -70)
forwardButton.Text = "Forward"
forwardButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
forwardButton.TextColor3 = Color3.fromRGB(255, 255, 255)
forwardButton.TextScaled = true
forwardButton.Parent = controlGui

-- Кнопка Backward
local backwardButton = Instance.new("TextButton")
backwardButton.Size = UDim2.new(0, 60, 0, 60)
backwardButton.Position = UDim2.new(1, -130, 0.5, 0)
backwardButton.Text = "Backward"
backwardButton.BackgroundColor3 = Color3.fromRGB(255, 128, 0)
backwardButton.TextColor3 = Color3.fromRGB(255, 255, 255)
backwardButton.TextScaled = true
backwardButton.Parent = controlGui

-- Кнопка Left
local leftButton = Instance.new("TextButton")
leftButton.Size = UDim2.new(0, 60, 0, 60)
leftButton.Position = UDim2.new(1, -70, 0.5, -70)
leftButton.Text = "Left"
leftButton.BackgroundColor3 = Color3.fromRGB(128, 0, 255)
leftButton.TextColor3 = Color3.fromRGB(255, 255, 255)
leftButton.TextScaled = true
leftButton.Parent = controlGui

-- Кнопка Right
local rightButton = Instance.new("TextButton")
rightButton.Size = UDim2.new(0, 60, 0, 60)
rightButton.Position = UDim2.new(1, -70, 0.5, 0)
rightButton.Text = "Right"
rightButton.BackgroundColor3 = Color3.fromRGB(128, 255, 0)
rightButton.TextColor3 = Color3.fromRGB(255, 255, 255)
rightButton.TextScaled = true
rightButton.Parent = controlGui

-- Кнопка Exit
local exitButton = Instance.new("TextButton")
exitButton.Size = UDim2.new(0, 60, 0, 60)
exitButton.Position = UDim2.new(0.5, -30, 0, 10)
exitButton.Text = "Exit"
exitButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
exitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
exitButton.TextScaled = true
exitButton.Parent = controlGui

-- Показатель скорости
local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(0, 100, 0, 40)
speedLabel.Position = UDim2.new(0.5, -50, 0, 80)
speedLabel.Text = "Speed: 0 km/h"
speedLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.TextScaled = true
speedLabel.Parent = controlGui

-- Управление
local isFlying = false
local height = 0
local forwardSpeed = 0
local turn = 0
local maxSpeed = 27.78 -- 100 км/ч в единицах Roblox (1 stud/sec ≈ 3.6 km/h)

-- Когда игрок садится
seat.Sit:Connect(function(humanoid)
    if humanoid.Parent == LocalPlayer.Character then
        -- Снимаем якорь с модели
        for _, part in pairs(helicopterModel:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
            end
        end
        isFlying = true
        controlGui.Enabled = true
        notify("Helicopter", "Use the buttons to control the helicopter")
    end
end)

seat.AncestryChanged:Connect(function()
    if not seat.Occupant then
        isFlying = false
        controlGui.Enabled = false
        forwardSpeed = 0
        turn = 0
        height = 0
        -- Возвращаем якорь, чтобы вертолёт не двигался
        for _, part in pairs(helicopterModel:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = true
            end
        end
    end
end)

-- Логика кнопок
upButton.MouseButton1Down:Connect(function()
    height = height + 0.5
end)

upButton.MouseButton1Up:Connect(function()
    height = height - 0.5
end)

downButton.MouseButton1Down:Connect(function()
    height = height - 0.5
end)

downButton.MouseButton1Up:Connect(function()
    height = height + 0.5
end)

forwardButton.MouseButton1Down:Connect(function()
    forwardSpeed = math.min(maxSpeed, forwardSpeed + 0.5)
end)

forwardButton.MouseButton1Up:Connect(function()
    forwardSpeed = math.max(0, forwardSpeed - 0.5)
end)

backwardButton.MouseButton1Down:Connect(function()
    forwardSpeed = math.max(0, forwardSpeed - 0.5)
end)

backwardButton.MouseButton1Up:Connect(function()
    forwardSpeed = math.min(maxSpeed, forwardSpeed + 0.5)
end)

leftButton.MouseButton1Down:Connect(function()
    turn = -0.5
end)

leftButton.MouseButton1Up:Connect(function()
    turn = 0
end)

rightButton.MouseButton1Down:Connect(function()
    turn = 0.5
end)

rightButton.MouseButton1Up:Connect(function()
    turn = 0
end)

exitButton.MouseButton1Click:Connect(function()
    if LocalPlayer.Character and LocalPlayer.Character.Humanoid then
        LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        isFlying = false
        forwardSpeed = 0
        turn = 0
        height = 0
    end
end)

-- Логика полёта
spawn(function()
    while helicopterModel and helicopterModel.Parent do
        wait(0.01)
        if isFlying then
            local rootPart = helicopterModel.PrimaryPart
            local currentCFrame = rootPart.CFrame

            -- Поворот
            local newCFrame = currentCFrame * CFrame.Angles(0, math.rad(turn), 0)

            -- Движение вперёд
            local direction = newCFrame.LookVector
            newCFrame = newCFrame + (direction * forwardSpeed * 0.1)

            -- Высота
            newCFrame = newCFrame + Vector3.new(0, height * 0.1, 0)

            -- Применяем CFrame
            rootPart.CFrame = newCFrame

            -- Обновление скорости (переводим в км/ч)
            local speedKmh = math.floor(forwardSpeed * 3.6)
            speedLabel.Text = "Speed: " .. speedKmh .. " km/h"
        end
    end
end)

-- Уведомление о спавне
notify("Helicopter Spawned", "Helicopter created! Sit in the seat to fly.")
