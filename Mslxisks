local Players = game:GetService("Players")
local player = Players.LocalPlayer
local scanRadius = 10 -- –ú–µ—Ç—Ä—ã

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Vector3
local function formatVector(vec)
    return string.format("(%.2f, %.2f, %.2f)", vec.X, vec.Y, vec.Z)
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–π —á–∞—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function getPlayerRoot()
    local character = player.Character or player.CharacterAdded:Wait()
    return character:WaitForChild("HumanoidRootPart")
end

-- –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ–±—ä–µ–∫—Ç–∞
local function quickAnalyze(obj)
    return {
        Name = obj.Name,
        Class = obj.ClassName,
        Id = obj:GetDebugId(),
        Position = formatVector(obj.Position),
        Size = obj:IsA("BasePart") and formatVector(obj.Size) or "N/A",
        Parent = obj.Parent and obj.Parent.Name or "nil"
    }
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
local function scanArea()
    local root = getPlayerRoot()
    local region = Region3.new(
        root.Position - Vector3.new(scanRadius, scanRadius, scanRadius),
        root.Position + Vector3.new(scanRadius, scanRadius, scanRadius)
    )
    local parts = workspace:FindPartsInRegion3(region, nil, math.huge)
    
    local report = "üîç –û–ë–™–ï–ö–¢–´ –í –†–ê–î–ò–£–°–ï "..scanRadius.." –ú–ï–¢–†–û–í:\n\n"
    local objectsFound = 0
    
    -- –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –≤ —Ä–µ–≥–∏–æ–Ω–µ
    local allObjects = {}
    for _, part in ipairs(parts) do
        table.insert(allObjects, part)
        for _, descendant in ipairs(part:GetDescendants()) do
            table.insert(allObjects, descendant)
        end
    end
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç
    for _, obj in ipairs(allObjects) do
        objectsFound = objectsFound + 1
        local info = quickAnalyze(obj)
        
        report ..= string.format("%d. %s (%s)\n", objectsFound, info.Name, info.Class)
        report ..= string.format("   üÜî ID: %s\n", info.Id)
        report ..= string.format("   üìç –ü–æ–∑–∏—Ü–∏—è: %s\n", info.Position)
        
        if info.Size ~= "N/A" then
            report ..= string.format("   üìè –†–∞–∑–º–µ—Ä: %s\n", info.Size)
        end
        
        report ..= string.format("   üè† –†–æ–¥–∏—Ç–µ–ª—å: %s\n\n", info.Parent)
    end
    
    if objectsFound == 0 then
        report ..= "‚ùå –û–ë–™–ï–ö–¢–´ –ù–ï –ù–ê–ô–î–ï–ù–´"
    else
        report ..= string.format("–ù–ê–ô–î–ï–ù–û –û–ë–™–ï–ö–¢–û–í: %d", objectsFound)
    end
    
    print(report)
    setclipboard(report)
end

-- –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
scanArea()
