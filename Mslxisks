local Players = game:GetService("Players")
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- Конфигурация --
local MAX_LOG_ENTRIES = 2000
local LOG_TO_CLIPBOARD = true
local DEEP_ANALYSIS_INTERVAL = 5 -- секунды
local BLACKLIST = { -- Объекты которые не логируем
    "Terrain",
    "Camera"
}

-- Глобальные переменные --
local ActionLog = {}
local LastDeepScan = 0
local KnownObjects = {}
local HookedRemotes = {}

-- Утилиты --
function safeCall(fn, ...)
    local success, result = pcall(fn, ...)
    if not success then return "ERROR: "..tostring(result) end
    return result
end

function formatValue(val)
    local t = typeof(val)
    if t == "table" then
        return HttpService:JSONEncode(val)
    elseif t == "Vector3" then
        return string.format("(%.1f,%.1f,%.1f)", val.X, val.Y, val.Z)
    elseif t == "Instance" then
        return val:GetFullName().." ["..val:GetDebugId().."]"
    else
        return tostring(val)
    end
end

function logEvent(category, action, details)
    local entry = string.format("[%s][%s] %s: %s",
        os.date("%H:%M:%S"),
        category,
        action,
        details
    )
    
    table.insert(ActionLog, 1, entry)
    if #ActionLog > MAX_LOG_ENTRIES then table.remove(ActionLog) end
    
    print(entry)
    if LOG_TO_CLIPBOARD then setclipboard(table.concat(ActionLog, "\n")) end
end

-- Детекторы --
function trackRemotes()
    local function hookRemote(remote)
        if HookedRemotes[remote] then return end
        HookedRemotes[remote] = true
        
        if remote:IsA("RemoteEvent") then
            remote.OnClientEvent:Connect(function(...)
                local args = {...}
                logEvent("NETWORK", "EVENT: "..remote.Name, 
                    formatValue(args).." | "..remote:GetFullName())
            end)
        elseif remote:IsA("RemoteFunction") then
            local old = remote.InvokeServer
            remote.InvokeServer = function(self, ...)
                local args = {...}
                logEvent("NETWORK", "CALL: "..remote.Name, 
                    formatValue(args).." | "..remote:GetFullName())
                return old(self, ...)
            end
        end
    end

    game.DescendantAdded:Connect(function(obj)
        if (obj:IsA("RemoteEvent") or (obj:IsA("RemoteFunction")) then
            hookRemote(obj)
        end
    end)

    for _,remote in ipairs(game:GetDescendants()) do
        if (remote:IsA("RemoteEvent") or remote:IsA("RemoteFunction")) then
            hookRemote(remote)
        end
    end
end

function trackCharacter()
    player.CharacterAdded:Connect(function(char)
        logEvent("CHARACTER", "SPAWN", char:GetFullName())
        
        local humanoid = char:WaitForChild("Humanoid")
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            logEvent("STATS", "HEALTH", 
                humanoid.Health.."/"..humanoid.MaxHealth)
        end)
        
        humanoid:GetPropertyChangedSignal("Sit"):Connect(function()
            logEvent("ANIMATION", humanoid.Sit and "SIT_START" or "SIT_END", "")
        end)
    end)
end

function trackInventory()
    if not player:FindFirstChild("Backpack") then return end
    
    local function logItem(action, item)
        logEvent("INVENTORY", action, 
            item.Name.." | "..item:GetFullName())
    end

    player.Backpack.ChildAdded:Connect(function(item)
        logItem("ADD", item)
    end)
    
    player.Backpack.ChildRemoved:Connect(function(item)
        logItem("REMOVE", item)
    end)
end

function trackPhysics()
    workspace.DescendantAdded:Connect(function(obj)
        if obj:IsA("BasePart") then
            obj.Touched:Connect(function(otherPart)
                logEvent("PHYSICS", "COLLISION",
                    obj:GetFullName().." ↔ "..otherPart:GetFullName())
            end)
        end
    end)
end

function trackUI()
    local function setupButton(btn)
        if btn:IsA("TextButton") or btn:IsA("ImageButton") then
            btn.MouseButton1Click:Connect(function()
                logEvent("UI", "CLICK", btn:GetFullName())
            end)
        end
    end

    player:WaitForChild("PlayerGui").DescendantAdded:Connect(function(ui)
        setupButton(ui)
    end)
end

function deepScan()
    if os.time() - LastDeepScan < DEEP_ANALYSIS_INTERVAL then return end
    LastDeepScan = os.time()
    
    for _,obj in ipairs(workspace:GetDescendants()) do
        if not KnownObjects[obj] and not table.find(BLACKLIST, obj.ClassName) then
            KnownObjects[obj] = true
            logEvent("DISCOVER", "NEW_"..obj.ClassName, obj:GetFullName())
        end
    end
end

-- Инициализация --
trackRemotes()
trackCharacter()
trackInventory()
trackPhysics()
trackUI()

logEvent("SYSTEM", "STARTED", "Ultimate Logger Activated")

RunService.Heartbeat:Connect(function()
    deepScan()
end)
