local radius = 15 -- —Ä–∞–¥–∏—É—Å —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –º–µ—Ç—Ä–∞—Ö
local player = game:GetService("Players").LocalPlayer

-- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ
local function getObjectInfo(obj)
    local info = {}
    
    -- –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    table.insert(info, "üî∑ "..obj.Name.." ("..obj.ClassName..")")
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å ID (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –æ—à–∏–±–æ–∫)
    local success, id = pcall(function() return obj:GetDebugId() end)
    table.insert(info, "üÜî ID: "..(success and id or "N/A"))
    
    table.insert(info, "üìÅ –ü—É—Ç—å: "..obj:GetFullName())
    
    -- –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if obj:IsA("BasePart") then
        table.insert(info, "üìç –ü–æ–∑–∏—Ü–∏—è: "..tostring(obj.Position))
        table.insert(info, "üìè –†–∞–∑–º–µ—Ä: "..tostring(obj.Size))
    end
    
    -- –î–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã
    local children = {}
    for _, child in pairs(obj:GetChildren()) do
        table.insert(children, "   ‚îú‚îÄ "..child.Name.." ("..child.ClassName..")")
    end
    
    if #children > 0 then
        table.insert(info, "üßí –î–µ—Ç–∏ ("..#children.."):")
        for _, childInfo in ipairs(children) do
            table.insert(info, childInfo)
        end
    end
    
    return table.concat(info, "\n")
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
local function scanArea()
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if not player.Character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    end
    
    local humanoidRoot = player.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRoot then
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω HumanoidRootPart")
        return
    end
    
    local playerPos = humanoidRoot.Position
    local result = {"=== –û–ë–™–ï–ö–¢–´ –í –†–ê–î–ò–£–°–ï "..radius.."–º ==="}
    local count = 0
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã
    for _, obj in pairs(workspace:GetDescendants()) do
        local objPos
        local success = pcall(function()
            if obj:IsA("BasePart") then
                objPos = obj.Position
            elseif obj:IsA("Model") then
                if obj.PrimaryPart then
                    objPos = obj.PrimaryPart.Position
                end
            else
                local part = obj:FindFirstChildOfClass("BasePart")
                if part then
                    objPos = part.Position
                end
            end
        end)
        
        if success and objPos and (objPos - playerPos).Magnitude <= radius then
            local objInfo = getObjectInfo(obj)
            table.insert(result, "\n"..objInfo)
            count = count + 1
        end
    end
    
    -- –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    table.insert(result, "\n=== –ù–ê–ô–î–ï–ù–û –û–ë–™–ï–ö–¢–û–í: "..count.." ===")
    local output = table.concat(result, "\n")
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º
    setclipboard(output)
    print(output)
    print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
scanArea()

-- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
while true do
    wait(30)
    scanArea()
end
