local radius = 15 -- –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö
local player = game:GetService("Players").LocalPlayer

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è DebugId
local function getSafeId(obj)
    local success, id = pcall(function() return obj:GetDebugId() end)
    return success and id or "N/A"
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
local function scanArea()
    local result = {"=== –û–ë–™–ï–ö–¢–´ –í –†–ê–î–ò–£–°–ï "..radius.."–º ==="}
    local char = player.Character
    local rootPart = char and char:FindFirstChild("HumanoidRootPart")
    
    if not rootPart then
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω HumanoidRootPart")
        return
    end

    local playerPos = rootPart.Position

    for _, obj in pairs(workspace:GetDescendants()) do
        local objRoot = obj:IsA("BasePart") and obj or obj:FindFirstChildOfClass("BasePart") or obj.PrimaryPart
        if objRoot and (objRoot.Position - playerPos).Magnitude <= radius then
            -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –æ–±—ä–µ–∫—Ç–µ
            table.insert(result, string.format(
                "\nüî∑ %s (%s) | ID: %s\n   –ü—É—Ç—å: %s",
                obj.Name,
                obj.ClassName,
                getSafeId(obj),
                obj:GetFullName()
            ))

            -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç—è—Ö
            if #obj:GetChildren() > 0 then
                table.insert(result, "   ‚îú‚îÄ –î–µ—Ç–∏:")
                for _, child in ipairs(obj:GetChildren()) do
                    table.insert(result, string.format(
                        "   ‚îÇ  %s (%s) | ID: %s",
                        child.Name,
                        child.ClassName,
                        getSafeId(child)
                    ))
                end
            end
        end
    end

    -- –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    table.insert(result, "\n=== –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
    local output = table.concat(result, "\n")
    
    setclipboard(output) -- –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä
    print(output) -- –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")
end

-- –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
scanArea()
